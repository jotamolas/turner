<?php

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * position
 *
 * @ORM\Table(name="position")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\positionRepository")
 */
class position {

    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=255)
     */
    private $name;

    /**
     * 
     * @ORM\OneToMany(targetEntity="turn", mappedBy="position")
     * 
     */
    private $turns;

    /**
     * @var bool
     *
     * @ORM\Column(name="is_enabled", type="boolean")
     */
    private $isEnabled;

    /**
     * @var positionState
     * @ORM\ManyToOne(targetEntity="positionState")
     * @ORM\JoinColumn(name="state", referencedColumnName="id",nullable=true)
     * 
     */
    private $state;

    public function __construct() {
        $this->turns = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Get id
     *
     * @return int
     */
    public function getId() {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     *
     * @return position
     */
    public function setName($name) {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName() {
        return $this->name;
    }

    /**
     * Add turn
     *
     * @param \AppBundle\Entity\turn $turn
     *
     * @return position
     */
    public function addTurn(\AppBundle\Entity\turn $turn) {
        $this->turns[] = $turn;

        return $this;
    }

    /**
     * Remove turn
     *
     * @param \AppBundle\Entity\turn $turn
     */
    public function removeTurn(\AppBundle\Entity\turn $turn) {
        $this->turns->removeElement($turn);
    }

    /**
     * Get turns
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getTurns() {
        return $this->turns;
    }

    /**
     * Set state
     *
     * @param \AppBundle\Entity\positionState $state
     *
     * @return position
     */
    public function setState(\AppBundle\Entity\positionState $state = null) {
        $this->state = $state;

        return $this;
    }

    /**
     * Get state
     *
     * @return \AppBundle\Entity\positionState
     */
    public function getState() {
        return $this->state;
    }

}
